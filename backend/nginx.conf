#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    upstream backend {
        server 127.0.0.1:8000 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:8001 max_fails=1 fail_timeout=30s weight=1;
        server 127.0.0.1:8002 max_fails=1 fail_timeout=30s weight=1;
    }

    # By default, NGINX caches all responses to requests made with the HTTP GET and HEAD methods the first time such
    # responses are received from a proxied server. As the key (identifier) for a request, NGINX uses the request string.
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=all:10m max_size=100m;
    proxy_cache_methods GET;
    proxy_cache_valid any 5m;

    # on MacOS:
    # brew tap denji/nginx
    # brew install nginx-full --with-headers-more-module --with-status --with-http2
    more_set_headers "Server: blog";

    ssl_certificate /Users/kerimov-ahmed/bmstu/BWAD/backend/localhost.crt;
    ssl_certificate_key /Users/kerimov-ahmed/bmstu/BWAD/backend/localhost.key;

    server {
        listen  80;
        return  301 https://$host$request_uri;
    }

    server {
        listen       443 ssl http2 default_server;
        server_name  localhost;

        access_log /Users/kerimov-ahmed/bmstu/BWAD/backend/logs/access.log;
        error_log  /Users/kerimov-ahmed/bmstu/BWAD/backend/logs/error.log;

        location /api/v1 {
            proxy_pass http://backend;
            proxy_no_cache 1;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location / {
            root /Users/kerimov-ahmed/bmstu/BWAD/backend/static;
            try_files $uri $uri/ $uri/index.html;
        }

        location /test {
            return 301 /;
        }

        location /admin {
            proxy_pass http://backend;
        }

        location /status {
            stub_status;
        }

        location /static {
            proxy_pass http://backend;
        }

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        ##error_page  404              /404.html;
        #
        ## redirect server error pages to the static page /50x.html
        ##
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
    }

    include       mime.types;
    default_type  application/octet-stream;

    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;

    keepalive_timeout     65;
    types_hash_max_size 2048;

    gzip  on;


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    #include servers/*;
}
